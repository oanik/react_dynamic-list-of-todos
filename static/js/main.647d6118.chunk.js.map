{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["getUser","url","fetch","then","response","json","result","data","TodoList","state","status","todos","props","title","handleChange","event","target","name","value","setState","JSON","parse","toLowerCase","filter","todo","completed","handleBlur","includes","handleRandom","tempArray","i","length","j","Math","floor","random","temp","prevProps","this","onSelecUser","selectedUserId","className","type","onClick","placeholder","onChange","onBlur","map","key","id","readOnly","userId","React","Component","defaultProps","CurrentUser","user","loadData","a","onClear","email","phone","App","selectUser","clearUser","ReactDOM","render","document","getElementById"],"mappings":"sWAOaA,G,YAAU,SAAAC,GAAG,OAAIC,MAAM,GAAD,OANtB,yCAMsB,OAAcD,IAC9CE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,U,cCLZC,G,MAAb,4MACEC,MAAQ,CACNC,OAAQ,GACRC,MAAO,EAAKC,MAAMD,MAClBE,MAAO,IAJX,EAcEC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,OAAQD,GACN,IAAK,QAAU,IAAD,EACZ,EAAKE,UAAL,mBACGF,EAAOC,GADV,sBACwB,EAAKN,MAAMD,OADnC,uBACkD,OADlD,IAGA,MAGF,QACE,EAAKQ,UAAS,SAACV,GAAW,IAAD,EACF,EAArB,GAAc,QAAVS,EACF,OAAO,EAAP,iBACGD,EAAOC,GADV,sBAES,EAAKN,MAAMD,OAFpB,sBAGS,KAHT,EAOF,IAAMD,EAASU,KAAKC,MAAMH,EAAMI,eAEhC,OAAO,EAAP,iBACGL,EAAOP,GADV,sBAES,IAFT,kCAGa,EAAKE,MAAMD,MACnBY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAcf,OAJvC,OArCV,EAgDEgB,WAAa,SAACX,GAAW,IACfG,EAAUH,EAAMC,OAAhBE,MAER,EAAKC,SAAS,CAAER,MAAO,EAAKC,MAAMD,MAAMY,QAAO,SAAAC,GAAI,OAAmB,OAAfA,EAAKX,QACvB,IAA/BW,EAAKX,MAAMc,SAAST,SApD9B,EAuDEU,aAAe,WAGb,IAFA,IAAMC,EAAS,YAAO,EAAKjB,MAAMD,OAExBmB,EAAID,EAAUE,OAAS,EAAGD,EAAI,EAAGA,GAAK,EAAG,CAChD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAUC,GAEvBD,EAAUC,GAAKD,EAAUG,GACzBH,EAAUG,GAAKI,EAGjB,EAAKjB,SAAS,CAAER,MAAOkB,KAlE3B,wDAOE,SAAmBQ,GACbA,EAAU1B,QAAU2B,KAAK1B,MAAMD,OAEjC2B,KAAKnB,SAAS,CAAER,MAAO2B,KAAK1B,MAAMD,UAVxC,oBAqEE,WAAU,IAAD,EACiC2B,KAAK1B,MAArC2B,EADD,EACCA,YAAaC,EADd,EACcA,eACb7B,EAAU2B,KAAK7B,MAAfE,MAER,OACE,yBAAK8B,UAAU,YACb,8CACA,yBAAKA,UAAU,4BACb,4BACEC,KAAK,SACLD,UAAU,YACVE,QAASL,KAAKV,cAHhB,aAOA,+BACE,2BACEc,KAAK,OACLzB,KAAK,QACLC,MAAOoB,KAAK7B,MAAMI,MAClB+B,YAAY,kBACZC,SAAUP,KAAKxB,aACfgC,OAAQR,KAAKZ,cAIjB,4BACET,KAAK,SACLC,MAAOoB,KAAK7B,MAAMC,OAClBmC,SAAUP,KAAKxB,cAEf,4BAAQI,MAAM,IAAd,iBACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,UACA,4BAAQA,MAAM,SAAd,cAEF,wBAAIuB,UAAU,kBACX9B,EAAMoC,KAAI,SAAAvB,GAAI,OACb,wBACEwB,IAAKxB,EAAKyB,GACVR,UAAU,4CAEV,+BACE,2BACEC,KAAK,WACLQ,UAAQ,IAEV,2BAAI1B,EAAKX,QAEV2B,IAAmBhB,EAAK2B,OACvB,4BACEV,UAAU,gEAIVC,KAAK,SACLC,QAAS,WACPJ,EAAY,KAPhB,WAWGf,EAAK2B,QAGR,4BACEV,UAAU,kEAIVC,KAAK,SACLC,QAAS,WACPJ,EAAYf,EAAK2B,UAPrB,WAWG3B,EAAK2B,mBAhJ1B,GAA8BC,IAAMC,YA4JpC7C,EAAS8C,aAAe,CACtB3C,MAAO,GACP4B,YAAa,KACbC,eAAgB,M,UC9JLe,EAAb,4MACE9C,MAAQ,CACN+C,KAAM,EAAK5C,MAAMuC,QAFrB,EAeEM,SAfF,sBAea,4BAAAC,EAAA,sEACU1D,EAAQ,EAAKY,MAAMuC,QAD7B,OACHK,EADG,OAGT,EAAKrC,SAAS,CAAEqC,SAHP,2CAfb,uDAKE,WACElB,KAAKmB,aANT,gCASE,SAAmBpB,GACbA,EAAUc,SAAWb,KAAK1B,MAAMuC,QAClCb,KAAKmB,aAXX,oBAqBE,WAAU,IACAD,EAASlB,KAAK7B,MAAd+C,KACAG,EAAYrB,KAAK1B,MAAjB+C,QAER,OAAKH,EASH,yBAAKf,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGe,EAAKvC,OAIV,wBACEwB,UAAU,qBAETe,EAAKvC,MAER,uBAAGwB,UAAU,sBAAsBe,EAAKI,OACxC,uBAAGnB,UAAU,sBAAsBe,EAAKK,OACxC,4BACEnB,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPgB,MAJJ,eAtBA,sDA3BR,GAAiCP,IAAMC,WCoDxBS,E,4MAjDbrD,MAAQ,CACNE,MAAO,GACP6B,eAAgB,G,EASnBuB,WAAa,SAACvB,GACZ,EAAKrB,SAAS,CAAEqB,oB,EAGlBwB,UAAY,WACV,EAAK7C,SAAS,CAAEqB,eAAgB,K,8FAXjC,4BAAAkB,EAAA,sEHV4BxD,MAHjB,wCAIVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIA,EAAOC,QGQvB,OACQI,EADR,OAGE2B,KAAKnB,SAAS,CAAER,UAHlB,gD,0EAcD,WAAU,IAAD,EAC2B2B,KAAK7B,MAA/BE,EADD,EACCA,MAAO6B,EADR,EACQA,eAEf,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,gBACK,IAAjB9B,EAAMoB,OAAe,UACpB,kBAAC,EAAD,CACEpB,MAAOA,EACP4B,YAAaD,KAAKyB,WAClBvB,eAAgBA,KAKtB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZD,EACC,kBAAC,EAAD,CACEW,OAAQX,EACRmB,QAASrB,KAAK0B,YAEd,6B,GA1CGZ,IAAMC,WCHxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.647d6118.chunk.js","sourcesContent":["const API_URL = `https://mate-api.herokuapp.com/todos`;\nconst BaseURL = `https://mate-api.herokuapp.com/users/`;\n\nexport const getTodos = () => fetch(API_URL)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getUser = url => fetch(`${BaseURL}${url}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    status: '',\n    todos: this.props.todos,\n    title: '',\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.todos !== this.props.todos) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ todos: this.props.todos });\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title': {\n        this.setState({\n          [name]: value, todos: this.props.todos, status: 'all',\n        });\n        break;\n      }\n\n      default: {\n        this.setState((state) => {\n          if (value === 'all') {\n            return {\n              [name]: value,\n              todos: this.props.todos,\n              title: ' ',\n            };\n          }\n\n          const status = JSON.parse(value.toLowerCase());\n\n          return {\n            [name]: status,\n            title: '',\n            todos: [...this.props.todos\n              .filter(todo => todo.completed === status)],\n          };\n        });\n      }\n    }\n  }\n\n  handleBlur = (event) => {\n    const { value } = event.target;\n\n    this.setState({ todos: this.props.todos.filter(todo => todo.title !== null\n      && (todo.title.includes(value) === true)) });\n  }\n\n  handleRandom = () => {\n    const tempArray = [...this.props.todos];\n\n    for (let i = tempArray.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = tempArray[i];\n\n      tempArray[i] = tempArray[j];\n      tempArray[j] = temp;\n    }\n\n    this.setState({ todos: tempArray });\n  }\n\n  render() {\n    const { onSelecUser, selectedUserId } = this.props;\n    const { todos } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>List of Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <button\n            type=\"button\"\n            className=\"Randomize\"\n            onClick={this.handleRandom}\n          >\n            Randomize\n          </button>\n          <label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              placeholder=\"Filter by title\"\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n\n            />\n          </label>\n          <select\n            name=\"status\"\n            value={this.state.status}\n            onChange={this.handleChange}\n          >\n            <option value=\"\">Choose status</option>\n            <option value=\"all\">All</option>\n            <option value=\"true\">Active</option>\n            <option value=\"false\">Completed</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className=\"TodoList__item TodoList__item--unchecked\"\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n                {selectedUserId === todo.userId ? (\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\"\n                    type=\"button\"\n                    onClick={() => {\n                      onSelecUser(0);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                ) : (\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    TodoList__user-button--unselected\n                    button\"\n                    type=\"button\"\n                    onClick={() => {\n                      onSelecUser(todo.userId);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                )}\n              </li>\n\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nTodoList.defaultProps = {\n  todos: [],\n  onSelecUser: null,\n  selectedUserId: null,\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      createdAt: PropTypes.string.isRequired,\n      updatedAt: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onSelecUser: PropTypes.func,\n  selectedUserId: PropTypes.number,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: this.props.userId,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  loadData = async() => {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onClear } = this.props;\n\n    if (!user) {\n      return (\n        <span>\n          No User Selected\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.name}\n          </span>\n        </h2>\n\n        <h3\n          className=\"CurrentUser__name\"\n        >\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={() => {\n            onClear();\n          }}\n        >\n          Clear User\n        </button>\n      </div>\n    );\n  }\n}\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n selectUser = (selectedUserId) => {\n   this.setState({ selectedUserId });\n }\n\n clearUser = () => {\n   this.setState({ selectedUserId: 0 });\n }\n\n render() {\n   const { todos, selectedUserId } = this.state;\n\n   return (\n     <div className=\"App\">\n       <div className=\"App__sidebar\">\n         {todos.length === 0 ? 'NoTodos' : (\n           <TodoList\n             todos={todos}\n             onSelecUser={this.selectUser}\n             selectedUserId={selectedUserId}\n           />\n         )}\n       </div>\n\n       <div className=\"App__content\">\n         <div className=\"App__content-container\">\n           {selectedUserId ? (\n             <CurrentUser\n               userId={selectedUserId}\n               onClear={this.clearUser}\n             />\n           ) : 'No user is selected'}\n         </div>\n       </div>\n     </div>\n   );\n }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}